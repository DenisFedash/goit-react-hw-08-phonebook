{"version":3,"file":"static/js/589.cea0c293.chunk.js","mappings":"qLAEaA,E,QAAOC,EAAAA,IAAH,mZ,SCAJC,EAAU,WACrB,OAAO,SAACF,EAAD,M,2LCQM,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,YAExBC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MACtC,OAAQX,GACN,IAAK,OACH,OAAOC,EAAQU,GACjB,IAAK,QACH,OAAOR,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,SAcN,OACE,SAAC,IAAD,CACEC,GAAI,CACFC,SAAU,WACVC,gBAAiB,SACjBC,WAAY,OACZC,cAAe,OACfC,OAAQ,OACRC,UAAW,SACXC,SAAU,QACVC,UAAW,mCACXC,aAAc,OAVlB,UAaE,SAAC,IAAD,CACEC,UAAU,OACVV,GAAI,CACF,uBAAwB,CAAEW,EAAG,EAAGC,SAAU,SAE5CC,YAAU,EACVC,aAAa,MACbC,SA/Be,SAAAC,GAEnB,OADAA,EAAEC,iBACkB,KAAhB7B,EAAK8B,QAAkC,KAAjB5B,EAAM4B,QAAqC,KAApB1B,EAAS0B,OACjDC,EAAAA,GAAAA,MAAY,2CACV3B,EAAS4B,OAAS,EACpBD,EAAAA,GAAAA,KAAW,sDAEpBlC,EAASoC,EAAAA,EAAAA,SAAwB,CAAEjC,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,MAiB9C,UASE,iBACE8B,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,YAAa,OACbC,aAAc,QALlB,WAQE,SAAC,IAAD,CACEC,GAAG,gBACHC,MAAM,OACNC,QAAQ,WACRC,KAAK,OACL1C,KAAK,OACLW,MAAOX,EACP2C,SAAUlC,KAEZ,SAAC,IAAD,CACE8B,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,QACL1C,KAAK,QACLW,MAAOT,EACPyC,SAAUlC,KAEZ,SAAC,IAAD,CACEyB,MAAO,CAAElB,cAAe,QACxBuB,GAAG,oBACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACL1C,KAAK,WACLW,MAAOP,EACPuC,SAAUlC,KAEZ,SAAC,IAAD,CACEgC,QAAQ,YACRC,KAAK,SACLE,SAAUtC,EACVqB,SAAU,kBAAMhC,EAAS,UAJ3B,SAMGW,GAAY,SAAC,IAAD,IAAc","sources":["components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Spin = styled.div`\n  display: flex;\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid orange;\n  border-radius: 50%;\n  width: 1em;\n  height: 1em;\n  animation: spin 2s linear infinite;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { Spin } from './Spinner.styled';\n\nexport const Spinner = () => {\n  return <Spin></Spin>;\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport authSelectors from 'redux/auth/authSelectors';\nimport Button from '@mui/material/Button';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function RegisterPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(authSelectors.getLoading);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || email.trim() === '' || password.trim() === '') {\n      return toast.error('ðŸ’© Please fill in all fields!');\n    } else if (password.length < 7) {\n      return toast.info('Passwords must be at least 7 characters long!');\n    }\n    dispatch(authOperations.register({ name, email, password }));\n  };\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        backgroundColor: 'yellow',\n        paddingTop: '40px',\n        paddingBottom: '40px',\n        margin: 'auto',\n        textAlign: 'center',\n        maxWidth: '600px',\n        boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n        borderRadius: '4px',\n      }}\n    >\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, MaxWidth: '35ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            paddingLeft: '50px',\n            paddingRight: '50px',\n          }}\n        >\n          <TextField\n            id=\"standard-name\"\n            label=\"Name\"\n            variant=\"standard\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n          <TextField\n            id=\"standard-email\"\n            label=\"E-mail\"\n            variant=\"standard\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n          <TextField\n            style={{ paddingBottom: '30px' }}\n            id=\"standard-password\"\n            label=\"Password\"\n            variant=\"standard\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={isLoading}\n            onSubmit={() => navigate('login')}\n          >\n            {isLoading ? <Spinner /> : 'Sign Up'}\n          </Button>\n        </div>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["Spin","styled","Spinner","RegisterPage","navigate","useNavigate","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isLoading","useSelector","authSelectors","handleChange","target","value","sx","position","backgroundColor","paddingTop","paddingBottom","margin","textAlign","maxWidth","boxShadow","borderRadius","component","m","MaxWidth","noValidate","autoComplete","onSubmit","e","preventDefault","trim","toast","length","authOperations","style","display","flexDirection","paddingLeft","paddingRight","id","label","variant","type","onChange","disabled"],"sourceRoot":""}