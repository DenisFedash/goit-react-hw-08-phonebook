{"version":3,"file":"static/js/794.7de505fb.chunk.js","mappings":"wPAMaA,GAJcC,EAAAA,EAAAA,IAAH,qDAIJA,EAAAA,EAAAA,GAAH,wJASJC,EAAWD,EAAAA,EAAAA,GAAH,uMAyBRE,GAfaF,EAAAA,EAAAA,OAAH,iOAeEA,EAAAA,EAAAA,OAAH,iS,4GCLTG,GAjCOH,EAAAA,EAAAA,IAAH,uGAMQA,EAAAA,EAAAA,KAAH,oEAKEA,EAAAA,EAAAA,MAAH,4GAOAA,EAAAA,EAAAA,MAAH,sRAeIA,EAAAA,EAAAA,OAAH,qgB,iGCvBZ,SAASI,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UACPC,GAAaC,EAAAA,EAAAA,MAAnBC,KACR,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAqCMC,EAAQ,WACZH,EAAQ,IACRE,EAAU,KAGNE,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAEd,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MAEF,IAAK,SACHL,EAAUK,GACV,MAEF,QACE,SAGN,OACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,WACVC,gBAAiB,aACjBC,WAAY,OACZC,cAAe,OACfC,OAAQ,OACRC,SAAU,SAPd,WAUE,SAAC,KAAD,CAAWC,KAAK,SAASC,QAAS,kBAAM3B,EAAS,UAAjD,UACE,SAAC,MAAD,CAAa4B,KAAK,WAEpB,SAACV,EAAA,EAAD,CACEW,UAAU,OACVV,GAAI,CACF,uBAAwB,CAAEW,EAAG,IAE/BC,YAAU,EACVC,aAAa,MACbC,SA/De,SAAAlB,GACnBA,EAAEmB,iBAEF,IAAMC,EAAa,CACjB1B,KAAAA,EACAE,OAAAA,IAnBc,SAAAF,GAChB,OAAOJ,EAAS+B,MACd,SAAAC,GAAO,OAAIA,EAAQ5B,KAAK6B,gBAAkB7B,EAAK6B,iBAoB7CC,CAAU9B,IAhBI,SAAAE,GAClB,OAAON,EAAS+B,MAAK,SAAAC,GAAO,OAAIA,EAAQ1B,SAAWA,KAiBxC6B,CAAY7B,IAdX,SAACF,EAAME,GACnB,MAAuB,KAAhBF,EAAKgC,QAAmC,KAAlB9B,EAAO8B,OAezBC,CAAMjC,EAAME,IAGrBR,EAAWgC,GACXQ,EAAAA,GAAAA,QAAA,UAAiBlC,EAAjB,YAAyBE,EAAzB,0BAHAgC,EAAAA,GAAAA,MAAY,4DAFZA,EAAAA,EAAAA,IAAM,gBAAD,OAAOhC,EAAP,kCAFLgC,EAAAA,EAAAA,IAAM,gBAAD,OAAOlC,EAAP,iCASPI,KAsCE,UASE,iBACE+B,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,YAAa,OACbC,aAAc,QALlB,WAQE,SAACC,EAAA,EAAD,CACEC,GAAG,oBACHC,MAAM,OACNC,QAAQ,WACR1B,KAAK,OACLjB,KAAK,OACLQ,MAAOR,EACP4C,SAAUvC,EACVwC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAACP,EAAA,EAAD,CACEC,GAAG,oBACHC,MAAM,SACNC,QAAQ,WACR1B,KAAK,MACLjB,KAAK,SACLQ,MAAON,EACP0C,SAAUvC,EACVwC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAAC1D,EAAD,CAAQ4B,KAAK,SAAS+B,SAAUrD,EAAhC,SACGA,GAAY,SAACsD,EAAA,EAAD,IAAc,wBCjIxB,SAASC,IACtB,OAAO,SAAC5D,EAAD","sources":["components/ContactList/ContactList.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Form.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionList = styled.div`\n  /* position: relative; */\n`;\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  font-weight: 500;\n  font-size: 18px;\n  max-width: 600px;\n  margin: 0 auto;\n  padding-bottom: 50px;\n`;\n\nexport const ListItem = styled.li`\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border-radius: 4px;\n  background-color: lightgray;\n  padding: 10px;\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ButtonList = styled.button`\n  /* width: 60px; */\n  height: auto;\n  cursor: pointer;\n  border: none;\n  background: transparent;\n  padding: 0;\n  svg {\n    vertical-align: middle;\n    :hover {\n      fill: red;\n    }\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  background-color: transparent;\n  margin-top: 10px;\n  margin-right: 10px;\n  cursor: pointer;\n  :hover {\n    color: orange;\n  }\n\n  svg {\n    vertical-align: middle;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  background-color: green;\n`;\n\nexport const Container = styled.form`\n  margin-bottom: 30px;\n  margin-top: 5px;\n`;\n\nexport const TextName = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 5px;\n  width: 350px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n  :focus {\n    outline-color: blueviolet;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 25px;\n  padding: 10px 20px;\n\n  height: 45px;\n  background-color: teal;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  opacity: 0.8;\n  transition: opacity 250ms var(--timingFn);\n  cursor: pointer;\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n  text-transform: uppercase;\n  :hover {\n    background-color: #bc9428;\n  }\n`;\n","import { Button } from './ContactForm.styled';\nimport toast from 'react-hot-toast';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contacts';\nimport { useNavigate } from 'react-router-dom';\nimport { AddButton } from 'components/ContactList/ContactList.styled';\nimport { TiArrowBack } from 'react-icons/ti';\nimport { useState } from 'react';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport function ContactForm() {\n  const navigate = useNavigate();\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const checkName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const checkNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const Error = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    if (checkName(name)) {\n      toast(`🤔 ${name} is already in the contacts!`);\n    } else if (checkNumber(number)) {\n      toast(`🤔 ${number} is already in the contacts!`);\n    } else if (Error(name, number)) {\n      toast.error('😱 Enter the contacts name and number number!');\n    } else {\n      addContact(newContact);\n      toast.success(`${name} ${number} added successfully!`);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        backgroundColor: 'lightgreen',\n        paddingTop: '40px',\n        paddingBottom: '40px',\n        margin: 'auto',\n        maxWidth: '600px',\n      }}\n    >\n      <AddButton type=\"button\" onClick={() => navigate('/list')}>\n        <TiArrowBack size=\"2em\" />\n      </AddButton>\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1 },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            paddingLeft: '50px',\n            paddingRight: '50px',\n          }}\n        >\n          <TextField\n            id=\"standard-required\"\n            label=\"Name\"\n            variant=\"standard\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <TextField\n            id=\"standard-required\"\n            label=\"Number\"\n            variant=\"standard\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button type=\"submit\" disabled={isLoading}>\n            {isLoading ? <Spinner /> : 'Add contact'}\n          </Button>\n        </div>\n      </Box>\n    </Box>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\n\nexport default function Form() {\n  return <ContactForm />;\n}\n"],"names":["List","styled","ListItem","AddButton","Button","ContactForm","navigate","useNavigate","useAddContactMutation","addContact","isLoading","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","reset","handleChange","e","target","value","Box","sx","position","backgroundColor","paddingTop","paddingBottom","margin","maxWidth","type","onClick","size","component","m","noValidate","autoComplete","onSubmit","preventDefault","newContact","find","contact","toLowerCase","checkName","checkNumber","trim","Error","toast","style","display","flexDirection","paddingLeft","paddingRight","TextField","id","label","variant","onChange","pattern","title","required","disabled","Spinner","Form"],"sourceRoot":""}