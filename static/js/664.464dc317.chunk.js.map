{"version":3,"file":"static/js/664.464dc317.chunk.js","mappings":"qLAEaA,E,QAAOC,EAAAA,IAAH,mZ,SCAJC,EAAU,WACrB,OAAO,SAACF,EAAD,M,iLCOM,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,YAExBC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOR,EAASS,GAClB,IAAK,WACH,OAAOP,EAAYO,GACrB,QACE,SAeN,OACE,SAAC,IAAD,CACEC,GAAI,CACFC,SAAU,WACVC,gBAAiB,SACjBC,WAAY,OACZC,cAAe,OACfC,OAAQ,OACRC,UAAW,SACXC,SAAU,QACVC,UAAW,mCACXC,aAAc,OAVlB,UAaE,SAAC,IAAD,CACEC,UAAU,OACVV,GAAI,CACF,uBAAwB,CAAEW,EAAG,EAAGC,SAAU,SAE5CC,YAAU,EACVC,aAAa,MACbC,SAhCe,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjB5B,EAAM6B,QAAqC,KAApB3B,EAAS2B,OAClC,OAAOC,EAAAA,GAAAA,MAAY,2CAErBjC,EAASkC,EAAAA,EAAAA,MAAqB,CAAE/B,MAAAA,EAAOE,SAAAA,KAEvCD,EAASD,GACTG,EAAYD,IAiBV,UASE,iBACE8B,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,YAAa,OACbC,aAAc,QALlB,WAQE,SAAC,IAAD,CACEC,GAAG,oBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,OACL/B,KAAK,QACLC,MAAOV,EACPyC,SAAUlC,KAEZ,SAAC,IAAD,CACEyB,MAAO,CAAEjB,cAAe,QACxBsB,GAAG,0BACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACL/B,KAAK,WACLC,MAAOR,EACPuC,SAAUlC,KAEZ,SAAC,IAAD,CAAQiC,KAAK,SAASD,QAAQ,YAA9B,SACGnC,GAAY,SAAC,IAAD,IAAc","sources":["components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Spin = styled.div`\n  display: flex;\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid orange;\n  border-radius: 50%;\n  width: 1em;\n  height: 1em;\n  animation: spin 2s linear infinite;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { Spin } from './Spinner.styled';\n\nexport const Spinner = () => {\n  return <Spin></Spin>;\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport authSelectors from 'redux/auth/authSelectors';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport Button from '@mui/material/Button';\nimport toast from 'react-hot-toast';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(authSelectors.getLoading);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email.trim() === '' || password.trim() === '') {\n      return toast.error('ðŸ’© Please fill in all fields!');\n    }\n    dispatch(authOperations.logIn({ email, password }));\n\n    setEmail(email);\n    setPassword(password);\n  };\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        backgroundColor: 'yellow',\n        paddingTop: '40px',\n        paddingBottom: '60px',\n        margin: 'auto',\n        textAlign: 'center',\n        maxWidth: '600px',\n        boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n        borderRadius: '4px',\n      }}\n    >\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, MaxWidth: '35ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            paddingLeft: '50px',\n            paddingRight: '50px',\n          }}\n        >\n          <TextField\n            id=\"standard-required\"\n            label=\"E-mail\"\n            variant=\"standard\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n          <TextField\n            style={{ paddingBottom: '30px' }}\n            id=\"standard-password-input\"\n            label=\"Password\"\n            variant=\"standard\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n          <Button type=\"submit\" variant=\"contained\">\n            {isLoading ? <Spinner /> : 'Log In'}\n          </Button>\n        </div>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["Spin","styled","Spinner","LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","isLoading","useSelector","authSelectors","handleChange","target","name","value","sx","position","backgroundColor","paddingTop","paddingBottom","margin","textAlign","maxWidth","boxShadow","borderRadius","component","m","MaxWidth","noValidate","autoComplete","onSubmit","e","preventDefault","trim","toast","authOperations","style","display","flexDirection","paddingLeft","paddingRight","id","label","variant","type","onChange"],"sourceRoot":""}